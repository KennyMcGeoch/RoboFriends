{"version":3,"sources":["Components/Card.jsx","Components/CardList.jsx","Components/SearchBox.jsx","Components/Scroll.jsx","Components/ErrorBoundary.jsx","Containers/App.jsx","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","CardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setstate","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACJ,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCOGK,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAEtB,OACI,8BACKH,KCGEI,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBY,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCIPI,EATA,SAACC,GACZ,OACI,qBAAKhB,UAAU,cAAciB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAA9F,SAECJ,EAAMK,YCeAC,G,wDAlBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAMvB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAfMQ,cCwCXC,E,kDAlCb,aAAc,IAAD,8BACT,gBAYRC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEvB,YAAasB,EAAME,OAAOC,SAZtC,EAAKZ,MAAQ,CACTnB,OAAQ,GACRM,YAAa,IAJR,E,qDAQjB,WAAqB,IAAD,OAChB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKP,SAAS,CAAC7B,OAAQoC,S,oBAMrC,WAAU,IAAD,EACuBb,KAAKJ,MAA7BnB,EADC,EACDA,OAAQM,EADP,EACOA,YACV+B,EAAiBrC,EAAOsC,QAAO,SAAAC,GAClC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASnC,EAAYkC,kBAExD,OACA,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC1B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAQqC,e,GA7BhBZ,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2336ca80.chunk.js","sourcesContent":["// import react from \"react\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n    <img alt=\"robots\" src={`https://robohash.org/${id}?size=300x300`}/>\r\n    <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n    </div>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const CardArray = robots.map((user, i) => {\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n    })\r\n    return (\r\n        <div>\r\n            {CardArray}\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","// import react from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" \r\n            type=\"search\" placeholder=\"Search Robots\" \r\n            onChange={searchChange}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","// import react from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"noScrollBar\" style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\r\n        {props.children}\r\n        </div>  \r\n    )}    \r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false}\r\n    }\r\n\r\ncomponentDidCatch(error, info) {\r\n    this.setstate({ hasError:true})\r\n}\r\n\r\nrender() {\r\n    if (this.state.hasError){\r\n        return <h1>Ooooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nclass App extends Component  {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \"\"\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(users=> this.setState({robots: users }));}\r\n\r\nonSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n       return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return( \r\n    <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                <CardList robots={filteredRobots}/>\r\n                </ErrorBoundary>\r\n            </Scroll>\r\n    </div>);\r\n}}\r\n\r\n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}